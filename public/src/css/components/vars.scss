$bg_color: #35abe6;
$line: #d7dadc;

@mixin openSans {
  font-family: 'Open Sans', sans-serif;
}

@mixin quattrocento {
  font-family: 'Quattrocento Sans', sans-serif;
}

@mixin fontello {
  font-family: 'fontello';
}

@mixin roboto {
  font-family: 'Roboto', sans-serif;
}

@mixin roboto_condensed {
  font-family: 'Roboto Condensed', sans-serif;
}

@mixin no_decoration {
  &:hover, &:focus, &:visited, &:active {
    text-decoration: none;
  }
}

@mixin alignCenter($fixed: false) {
  @if($fixed) {
    position: fixed;
  } @else {
    position: absolute;
  }
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

@mixin vertical-align {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    clear: both;
    display: table;
  }
}

@mixin blur($blur) {
  -webkit-filter: blur($blur);
  -moz-filter: blur($blur);
  -ms-filter: blur($blur);
  -o-filter: blur($blur);
  filter: blur($blur);
}

@mixin user-select {
  -moz-user-select: -moz-none;
  -o-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}

@mixin transition($transition...) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transform($transform...) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

@mixin transition-property($property...) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}
@mixin transition-duration($duration...) {
  -moz-transition-duration:    $duration;
  -o-transition-duration:      $duration;
  -webkit-transition-duration: $duration;
  transition-duration:         $duration;
}
@mixin transition-timing-function($timing...) {
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(top, $startColor, $endColor);
  background-image:    -moz-linear-gradient(top, $startColor, $endColor);
  background-image:     -ms-linear-gradient(top, $startColor, $endColor);
  background-image:      -o-linear-gradient(top, $startColor, $endColor);
  background-image:         linear-gradient(top, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999) {
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(left, $startColor, $endColor);
  background-image:    -moz-linear-gradient(left, $startColor, $endColor);
  background-image:     -ms-linear-gradient(left, $startColor, $endColor);
  background-image:      -o-linear-gradient(left, $startColor, $endColor);
  background-image:         linear-gradient(left, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}

@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
  background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
  background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin center($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}

.btn {
  font-size: 13px;
  line-height: 15px;
  border: 0;
  border-radius: 2px;
  background-color: $bg_color;
  color: #fff;
  text-align: center;
  text-decoration: none;
  zoom: 1;
  cursor: pointer;
  white-space: nowrap;
  outline: none;
  vertical-align: top;
  margin: 0;
  padding: 9px 20px;
  display: inline-block;
}
//btn

.btn_white {
  font-size: 16px;
  border: 2px solid #fff;
  text-align: center;
  border-radius: 50px;
  background-color: transparent;
  -webkit-appearance: none;
  outline: none;
  color: #ffffff;
  display: inline-block;
  padding: 10px 20px;
  @include transition(all .27s ease-in-out);
  &:hover {
    background-color: rgba(255,255,255,0.12);
    box-shadow: 0 0 16px rgba(0,0,0,0.5);
    cursor: pointer;
  }
  //:hover
}
//btn_white

menu,ul,ol {
  margin: 0;
  padding: 0;
  li {
    list-style-type: none;
  }
}
a {
  text-decoration: none;
  -webkit-appearance: none;
}

textarea,
input,
textarea {
  -webkit-appearance: none;
  border-radius: 0;
}

* {
  -webkit-tap-highlight-color: transparent;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

* {
  &::-webkit-scrollbar {
    width: 8px;
  }
  &::-webkit-scrollbar-track {
    border-radius: 50px;
    background-color: #ffffff;
  }
  &::-webkit-scrollbar-thumb {
    border-radius: 50px;
    border: 2px solid #ffffff;
    background-color: #ffffff;
  }
  &::-webkit-scrollbar-button {
    height: 4px;
  }
}

.blind_label {
    position: absolute;
    height: 1px;
    width: 1px;
    clip: rect(1px, 1px, 1px, 1px);
    opacity: 0;
    overflow: hidden;
    outline: none;
}

@mixin scrollBarHover {
  &:hover {
    &::-webkit-scrollbar-thumb {
      background-color: #cacaca;
    }
  }
}
